name: Production

on:
  pull_request:
    branches: [ master ]
    types:
      - closed
  workflow_dispatch:

env:
  CONTAINER_NAME: mlf_backend-prod
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}-prod

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare golang environment
        uses: actions/setup-go@v3

      - name: Install dependencies
        run: go mod download

      - name: Build project
        run: go build cmd/app/main.go

      - name: Build bot
        run: go build cmd/bot/main.go

#  tests:
#    name: Lint & Test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Prepare node.js environment
#        uses: actions/setup-node@v3
#        with:
#          node-version: 16
#
#      - name: Install dependencies
#        working-directory: ./client
#        run: yarn ci
#
#      - name: Lint
#        working-directory: ./client
#        run: yarn lint
#
#      - name: Run unit tests
#        working-directory: ./client
#        run: yarn test

  shipping:
    name: Prepare docker image
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: write config file
        env:
          CONFIG_DATA: ${{ secrets.CONFIG_DATA }}
        run: |
          echo $CONFIG_DATA > config/common.yaml

      - name: Build and push Docker image
        id:   docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:

    name: Production deploy
    runs-on: ubuntu-latest
    needs: shipping
    steps:
      - name: write env file
        env:
          ENV_FILE_DATA: ${{ secrets.ENV_FILE_DATA }}
        run: |
          echo $ENV_FILE_DATA > .env

      - name: copy env file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          source: ".env"
          target: "mlf_backend"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: copy docker-compose file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          source: "docker-compose.prod.yaml"
          target: "mlf_backend"

      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
          script: |
            cd mlf_backend &&
            docker pull ${{ env.IMAGE_NAME }}:latest &&
            docker-compose --file docker-compose.prod.yaml up --no-deps --force-recreate -d --build server